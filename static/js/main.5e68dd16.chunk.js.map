{"version":3,"sources":["ChatMessage/index.js","ChatRoom/index.js","SignIn/index.js","App.js","reportWebVitals.js","index.js"],"names":["ChatMessage","props","auth","this","message","text","userId","name","profilePhoto","messageClass","currentUser","uid","className","src","alt","Component","ChatRoom","db","logout","bind","sendMessage","handleMessageInputOnChange","ref","chatbox","state","messageInput","messages","getMessages","scrollDown","a","messagesCol","collection","q","query","orderBy","limit","getDocs","snapshot","docs","map","doc","data","setState","e","preventDefault","value","displayName","photoURL","createdAt","Timestamp","now","addDoc","addEventListener","event","target","currentTarget","scroll","top","scrollHeight","behavior","signOut","messageLists","index","onClick","node","onSubmit","htmlFor","type","id","placeholder","onChange","SignIn","provider","GoogleAuthProvider","signInWithPopup","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","getFirestore","App","useAuthState","user","exact","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e68dd16.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './index.css';\n\nexport default class ChatMessage extends Component {\n\n  constructor(props) {\n    super(props)\n    this.auth = props.auth\n  }\n\n  render() {\n    const { text, userId, name, profilePhoto } = this.props.message;\n\n    const messageClass = userId === this.auth.currentUser.uid ? 'sent' : 'recieved';\n\n    return (\n      <div className={`message-box my-3 ${messageClass}`}>\n        <img src={profilePhoto} className='profile-photo mx-3' alt={name} />\n        <div className='text-message'>\n          <p className='name'>{name}</p>\n          <p className='text'>{text}</p>\n        </div>\n        {/*<div className=\"card mb-3\" style={{maxWidth: \"540px\", float: 'right', borderRadius:'5rem', background:'#1a1a1d'}}>\n          <div className=\"row g-0\">\n            <div className=\"col-md-4\">\n              <img src={profilePhoto} className=\"img-fluid rounded-start\" style={{ borderRadius: '5rem' }}/>\n            </div>\n            <div className=\"col-md-8\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{name}</h5>\n                <p className=\"card-text\">{text}</p>\n              </div>\n            </div>\n          </div>\n        </div>*/}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport ChatMessage from '../ChatMessage';\nimport { signOut } from 'firebase/auth';\nimport { collection, getDocs, addDoc, query, orderBy, limit, Timestamp } from 'firebase/firestore';\nimport './index.css';\n\nexport default class ChatRoom extends Component {\n\n  constructor(props) {\n    super(props)\n    this.auth = props.auth\n    this.db = props.db\n    this.logout = this.logout.bind(this)\n    this.sendMessage = this.sendMessage.bind(this)\n    this.handleMessageInputOnChange = this.handleMessageInputOnChange.bind(this)\n    this.ref = {\n      message: null,\n      chatbox: null,\n    }\n    this.state = {\n      messageInput: '',\n      messages: []\n    }\n  }\n\n  componentDidMount() {\n    this.getMessages()\n    this.scrollDown()\n  }\n\n  async getMessages() {\n    const messagesCol = collection(this.db, 'messages')\n    const q = query(messagesCol, orderBy('createdAt', 'asc'), limit(25))\n    const snapshot = await getDocs(q)\n    const messages = snapshot.docs.map(doc => doc.data())\n    this.setState({ messages })\n  }\n\n  async sendMessage(e) {\n    e.preventDefault()\n    const messagesCol = collection(this.db, 'messages');\n    const data = {\n      userId: this.auth.currentUser.uid,\n      text: this.ref.message.value,\n      name: this.auth.currentUser.displayName,\n      profilePhoto: this.auth.currentUser.photoURL,\n      createdAt: Timestamp.now(),\n    }\n    await addDoc(messagesCol, data)\n    await this.getMessages()\n    this.scrollDown()\n    this.setState({ messageInput: '' })\n  }\n\n  scrollDown() {\n    this.ref.chatbox.addEventListener('DOMNodeInserted', (event) => {\n      const { currentTarget: target } = event\n      target.scroll({ top: target.scrollHeight, behavior: 'smooth' })\n    })\n  }\n\n  handleMessageInputOnChange(messageInput) {\n    const { value } = messageInput.target\n    this.setState({ messageInput: value })\n  }\n\n  logout() {\n    signOut(this.auth)\n  }\n\n  render() {\n    const { messages, messageInput } = this.state\n    const messageLists = messages && messages.map((message, index) => (<ChatMessage key={index} message={message} auth={this.auth} />))\n    return (\n      <section className=\"p-4 h-100\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 header\">\n              <h1 className=\"float-start\">Chat Room</h1>\n              <button className=\"float-end btn btn-secondary\" onClick={this.logout}>Sign Out</button>\n            </div>\n            <div className=\"col-12 chat\" ref={node => (this.ref.chatbox = node)}>\n              {messageLists}\n            </div>\n            <div className=\"col-12 message-input\">\n              <form className=\"row g-2\" onSubmit={this.sendMessage}>\n                <div className=\"col-11\">\n                  <label htmlFor=\"message\" className=\"visually-hidden\">Message</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"message\"\n                    placeholder=\"Enter you message...\"\n                    value={messageInput}\n                    onChange={this.handleMessageInputOnChange}\n                    ref={node => (this.ref.message = node)}\n                  />\n                </div>\n                <div className=\"col-1\">\n                  <button type=\"submit\" className=\"btn btn-primary w-100\">Send</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}","import React from 'react';\nimport { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport './index.css';\n\nexport default function SignIn(props) {\n  const { auth } = props\n  const googleSignIn = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider);\n  }\n\n  return (\n    <div className=\"sign-in text-center\">\n      <div className='box'>\n        <img className='logo mb-3' src='/chat-app-firebase/firechat2.jpeg' alt='FyreChat' />\n        <button className=\"btn btn-secondary\" onClick={googleSignIn}>\n          Sign In With Google\n        </button>\n      </div>\n    </div>\n  )\n}","import ChatRoom from './ChatRoom';\nimport SignIn from './SignIn';\n\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyAEBVkCPzvl2-H3ElkVLLUEklgl1f-STm8\",\n  authDomain: \"chat-app-4c8df.firebaseapp.com\",\n  projectId: \"chat-app-4c8df\",\n  storageBucket: \"chat-app-4c8df.appspot.com\",\n  messagingSenderId: \"220779545878\",\n  appId: \"1:220779545878:web:fa6a6b2a9e2057857ebc37\"\n});\n\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nfunction App() {\n  const [user] = useAuthState(auth)\n  const props = {\n    auth,\n    db,\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route exact path='/chat-app-firebase'>\n          {user ? <Redirect to='/chat-app-firebase/chat-room' /> : <SignIn {...props} />}\n        </Route>\n        <Route exact path='/chat-app-firebase/chat-room'>\n          {user ? <ChatRoom {...props} /> : <Redirect to='/chat-app-firebase' />}\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}